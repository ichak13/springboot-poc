version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:1.0.0
    links:
     - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test:1:1"

  discovery-service:
    image: anichakra/discovery-service
    ports:
     - "8761:8761"
     
  gateway-service:
    image: anichakra/gateway-service
    depends_on:
     - discovery-service
    links:
     - discovery-service 
    command: ["./wait-for-it.sh", "discovery-service:8761", "--timeout=0"]  
    ports:
     - "8080:8080"
    environment:
      DISCOVERY_SERVICE_URL: http://discovery-service:8761/eureka
    
  config-service:
    image: anichakra/config-service
    depends_on:
     - discovery-service     
    ports:
     - "8888:8888"
    links:
     - kafka
     - zookeeper
     - discovery-service
    command: ["./wait-for-it.sh", "discovery-service:8761", "--timeout=0"]   
    environment:
      GIT_URI: https://github.com/anichakra/springboot-poc
      DISCOVERY_SERVICE_URL: http://discovery-service:8761/eureka     
      KAFKA_HOSTNAME: kafka
      ZOOKEEPER_HOSTNAME: zookeeper
 
     
  some-app-service:
    image: anichakra/some-app-service
    ports:
     - "8180:8180"
    links:
     - config-service
     - discovery-service
     - kafka
     - zookeeper
    depends_on:
     - discovery-service
     - gateway-service
     - config-service
    command: ["./wait-for-it.sh", "config-service:8761", "--timeout=0"]   
    environment:
      POSTGRES_URL: jdbc:postgresql://ec2-35-168-228-160.compute-1.amazonaws.com:5432/postgres
      DISCOVERY_SERVICE_URL: http://discovery-service:8761/eureka
      CONFIG_SERVICE_URL: http://config-service:8888
      KAFKA_HOSTNAME: kafka
      ZOOKEEPER_HOSTNAME: zookeeper
